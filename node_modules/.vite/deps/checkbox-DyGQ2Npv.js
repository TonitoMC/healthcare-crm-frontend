import { f, k, q } from "./dist-Cf1N86TT.js";
import { createBaseVNode, createBlock, createCommentVNode, createElementBlock, mergeProps, normalizeClass, openBlock, renderSlot, resolveComponent } from "./vue.runtime.esm-bundler-BHzSINof.js";
import { BaseStyle } from "./style-DMEDYKr8.js";
import { script as script$4 } from "./baseicon-BtCrtiE8.js";
import { script } from "./check-DwJuBWAX.js";
import { script as script$2 } from "./baseinput-PR21V7uA.js";

//#region node_modules/@primevue/icons/minus/index.mjs
var script$1 = {
	name: "MinusIcon",
	"extends": script$4
};
function _toConsumableArray$1(r) {
	return _arrayWithoutHoles$1(r) || _iterableToArray$1(r) || _unsupportedIterableToArray$1(r) || _nonIterableSpread$1();
}
function _nonIterableSpread$1() {
	throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$1(r, a) {
	if (r) {
		if ("string" == typeof r) return _arrayLikeToArray$1(r, a);
		var t = {}.toString.call(r).slice(8, -1);
		return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray$1(r, a) : void 0;
	}
}
function _iterableToArray$1(r) {
	if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles$1(r) {
	if (Array.isArray(r)) return _arrayLikeToArray$1(r);
}
function _arrayLikeToArray$1(r, a) {
	(null == a || a > r.length) && (a = r.length);
	for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
	return n;
}
function render$1(_ctx, _cache, $props, $setup, $data, $options) {
	return openBlock(), createElementBlock("svg", mergeProps({
		width: "14",
		height: "14",
		viewBox: "0 0 14 14",
		fill: "none",
		xmlns: "http://www.w3.org/2000/svg"
	}, _ctx.pti()), _toConsumableArray$1(_cache[0] || (_cache[0] = [createBaseVNode("path", {
		d: "M13.2222 7.77778H0.777778C0.571498 7.77778 0.373667 7.69584 0.227806 7.54998C0.0819442 7.40412 0 7.20629 0 7.00001C0 6.79373 0.0819442 6.5959 0.227806 6.45003C0.373667 6.30417 0.571498 6.22223 0.777778 6.22223H13.2222C13.4285 6.22223 13.6263 6.30417 13.7722 6.45003C13.9181 6.5959 14 6.79373 14 7.00001C14 7.20629 13.9181 7.40412 13.7722 7.54998C13.6263 7.69584 13.4285 7.77778 13.2222 7.77778Z",
		fill: "currentColor"
	}, null, -1)])), 16);
}
script$1.render = render$1;

//#endregion
//#region node_modules/@primeuix/styles/dist/checkbox/index.mjs
var style = "\n    .p-checkbox {\n        position: relative;\n        display: inline-flex;\n        user-select: none;\n        vertical-align: bottom;\n        width: dt('checkbox.width');\n        height: dt('checkbox.height');\n    }\n\n    .p-checkbox-input {\n        cursor: pointer;\n        appearance: none;\n        position: absolute;\n        inset-block-start: 0;\n        inset-inline-start: 0;\n        width: 100%;\n        height: 100%;\n        padding: 0;\n        margin: 0;\n        opacity: 0;\n        z-index: 1;\n        outline: 0 none;\n        border: 1px solid transparent;\n        border-radius: dt('checkbox.border.radius');\n    }\n\n    .p-checkbox-box {\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        border-radius: dt('checkbox.border.radius');\n        border: 1px solid dt('checkbox.border.color');\n        background: dt('checkbox.background');\n        width: dt('checkbox.width');\n        height: dt('checkbox.height');\n        transition:\n            background dt('checkbox.transition.duration'),\n            color dt('checkbox.transition.duration'),\n            border-color dt('checkbox.transition.duration'),\n            box-shadow dt('checkbox.transition.duration'),\n            outline-color dt('checkbox.transition.duration');\n        outline-color: transparent;\n        box-shadow: dt('checkbox.shadow');\n    }\n\n    .p-checkbox-icon {\n        transition-duration: dt('checkbox.transition.duration');\n        color: dt('checkbox.icon.color');\n        font-size: dt('checkbox.icon.size');\n        width: dt('checkbox.icon.size');\n        height: dt('checkbox.icon.size');\n    }\n\n    .p-checkbox:not(.p-disabled):has(.p-checkbox-input:hover) .p-checkbox-box {\n        border-color: dt('checkbox.hover.border.color');\n    }\n\n    .p-checkbox-checked .p-checkbox-box {\n        border-color: dt('checkbox.checked.border.color');\n        background: dt('checkbox.checked.background');\n    }\n\n    .p-checkbox-checked .p-checkbox-icon {\n        color: dt('checkbox.icon.checked.color');\n    }\n\n    .p-checkbox-checked:not(.p-disabled):has(.p-checkbox-input:hover) .p-checkbox-box {\n        background: dt('checkbox.checked.hover.background');\n        border-color: dt('checkbox.checked.hover.border.color');\n    }\n\n    .p-checkbox-checked:not(.p-disabled):has(.p-checkbox-input:hover) .p-checkbox-icon {\n        color: dt('checkbox.icon.checked.hover.color');\n    }\n\n    .p-checkbox:not(.p-disabled):has(.p-checkbox-input:focus-visible) .p-checkbox-box {\n        border-color: dt('checkbox.focus.border.color');\n        box-shadow: dt('checkbox.focus.ring.shadow');\n        outline: dt('checkbox.focus.ring.width') dt('checkbox.focus.ring.style') dt('checkbox.focus.ring.color');\n        outline-offset: dt('checkbox.focus.ring.offset');\n    }\n\n    .p-checkbox-checked:not(.p-disabled):has(.p-checkbox-input:focus-visible) .p-checkbox-box {\n        border-color: dt('checkbox.checked.focus.border.color');\n    }\n\n    .p-checkbox.p-invalid > .p-checkbox-box {\n        border-color: dt('checkbox.invalid.border.color');\n    }\n\n    .p-checkbox.p-variant-filled .p-checkbox-box {\n        background: dt('checkbox.filled.background');\n    }\n\n    .p-checkbox-checked.p-variant-filled .p-checkbox-box {\n        background: dt('checkbox.checked.background');\n    }\n\n    .p-checkbox-checked.p-variant-filled:not(.p-disabled):has(.p-checkbox-input:hover) .p-checkbox-box {\n        background: dt('checkbox.checked.hover.background');\n    }\n\n    .p-checkbox.p-disabled {\n        opacity: 1;\n    }\n\n    .p-checkbox.p-disabled .p-checkbox-box {\n        background: dt('checkbox.disabled.background');\n        border-color: dt('checkbox.checked.disabled.border.color');\n    }\n\n    .p-checkbox.p-disabled .p-checkbox-box .p-checkbox-icon {\n        color: dt('checkbox.icon.disabled.color');\n    }\n\n    .p-checkbox-sm,\n    .p-checkbox-sm .p-checkbox-box {\n        width: dt('checkbox.sm.width');\n        height: dt('checkbox.sm.height');\n    }\n\n    .p-checkbox-sm .p-checkbox-icon {\n        font-size: dt('checkbox.icon.sm.size');\n        width: dt('checkbox.icon.sm.size');\n        height: dt('checkbox.icon.sm.size');\n    }\n\n    .p-checkbox-lg,\n    .p-checkbox-lg .p-checkbox-box {\n        width: dt('checkbox.lg.width');\n        height: dt('checkbox.lg.height');\n    }\n\n    .p-checkbox-lg .p-checkbox-icon {\n        font-size: dt('checkbox.icon.lg.size');\n        width: dt('checkbox.icon.lg.size');\n        height: dt('checkbox.icon.lg.size');\n    }\n";

//#endregion
//#region node_modules/primevue/checkbox/style/index.mjs
var CheckboxStyle = BaseStyle.extend({
	name: "checkbox",
	style,
	classes: {
		root: function root(_ref) {
			var instance = _ref.instance, props = _ref.props;
			return ["p-checkbox p-component", {
				"p-checkbox-checked": instance.checked,
				"p-disabled": props.disabled,
				"p-invalid": instance.$pcCheckboxGroup ? instance.$pcCheckboxGroup.$invalid : instance.$invalid,
				"p-variant-filled": instance.$variant === "filled",
				"p-checkbox-sm p-inputfield-sm": props.size === "small",
				"p-checkbox-lg p-inputfield-lg": props.size === "large"
			}];
		},
		box: "p-checkbox-box",
		input: "p-checkbox-input",
		icon: "p-checkbox-icon"
	}
});

//#endregion
//#region node_modules/primevue/checkbox/index.mjs
var script$1$1 = {
	name: "BaseCheckbox",
	"extends": script$2,
	props: {
		value: null,
		binary: Boolean,
		indeterminate: {
			type: Boolean,
			"default": false
		},
		trueValue: {
			type: null,
			"default": true
		},
		falseValue: {
			type: null,
			"default": false
		},
		readonly: {
			type: Boolean,
			"default": false
		},
		required: {
			type: Boolean,
			"default": false
		},
		tabindex: {
			type: Number,
			"default": null
		},
		inputId: {
			type: String,
			"default": null
		},
		inputClass: {
			type: [String, Object],
			"default": null
		},
		inputStyle: {
			type: Object,
			"default": null
		},
		ariaLabelledby: {
			type: String,
			"default": null
		},
		ariaLabel: {
			type: String,
			"default": null
		}
	},
	style: CheckboxStyle,
	provide: function provide() {
		return {
			$pcCheckbox: this,
			$parentInstance: this
		};
	}
};
function _typeof(o) {
	"@babel/helpers - typeof";
	return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o$1) {
		return typeof o$1;
	} : function(o$1) {
		return o$1 && "function" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? "symbol" : typeof o$1;
	}, _typeof(o);
}
function _defineProperty(e, r, t) {
	return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
		value: t,
		enumerable: true,
		configurable: true,
		writable: true
	}) : e[r] = t, e;
}
function _toPropertyKey(t) {
	var i = _toPrimitive(t, "string");
	return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
	if ("object" != _typeof(t) || !t) return t;
	var e = t[Symbol.toPrimitive];
	if (void 0 !== e) {
		var i = e.call(t, r);
		if ("object" != _typeof(i)) return i;
		throw new TypeError("@@toPrimitive must return a primitive value.");
	}
	return ("string" === r ? String : Number)(t);
}
function _toConsumableArray(r) {
	return _arrayWithoutHoles(r) || _iterableToArray(r) || _unsupportedIterableToArray(r) || _nonIterableSpread();
}
function _nonIterableSpread() {
	throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
	if (r) {
		if ("string" == typeof r) return _arrayLikeToArray(r, a);
		var t = {}.toString.call(r).slice(8, -1);
		return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
	}
}
function _iterableToArray(r) {
	if ("undefined" != typeof Symbol && null != r[Symbol.iterator] || null != r["@@iterator"]) return Array.from(r);
}
function _arrayWithoutHoles(r) {
	if (Array.isArray(r)) return _arrayLikeToArray(r);
}
function _arrayLikeToArray(r, a) {
	(null == a || a > r.length) && (a = r.length);
	for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
	return n;
}
var script$3 = {
	name: "Checkbox",
	"extends": script$1$1,
	inheritAttrs: false,
	emits: [
		"change",
		"focus",
		"blur",
		"update:indeterminate"
	],
	inject: { $pcCheckboxGroup: { "default": void 0 } },
	data: function data() {
		return { d_indeterminate: this.indeterminate };
	},
	watch: { indeterminate: function indeterminate(newValue) {
		this.d_indeterminate = newValue;
		this.updateIndeterminate();
	} },
	mounted: function mounted() {
		this.updateIndeterminate();
	},
	updated: function updated() {
		this.updateIndeterminate();
	},
	methods: {
		getPTOptions: function getPTOptions(key) {
			return (key === "root" ? this.ptmi : this.ptm)(key, { context: {
				checked: this.checked,
				indeterminate: this.d_indeterminate,
				disabled: this.disabled
			} });
		},
		onChange: function onChange(event) {
			var _this = this;
			if (!this.disabled && !this.readonly) {
				var value = this.$pcCheckboxGroup ? this.$pcCheckboxGroup.d_value : this.d_value;
				var newModelValue;
				if (this.binary) newModelValue = this.d_indeterminate ? this.trueValue : this.checked ? this.falseValue : this.trueValue;
				else if (this.checked || this.d_indeterminate) newModelValue = value.filter(function(val) {
					return !k(val, _this.value);
				});
				else newModelValue = value ? [].concat(_toConsumableArray(value), [this.value]) : [this.value];
				if (this.d_indeterminate) {
					this.d_indeterminate = false;
					this.$emit("update:indeterminate", this.d_indeterminate);
				}
				this.$pcCheckboxGroup ? this.$pcCheckboxGroup.writeValue(newModelValue, event) : this.writeValue(newModelValue, event);
				this.$emit("change", event);
			}
		},
		onFocus: function onFocus(event) {
			this.$emit("focus", event);
		},
		onBlur: function onBlur(event) {
			var _this$formField$onBlu, _this$formField;
			this.$emit("blur", event);
			(_this$formField$onBlu = (_this$formField = this.formField).onBlur) === null || _this$formField$onBlu === void 0 || _this$formField$onBlu.call(_this$formField, event);
		},
		updateIndeterminate: function updateIndeterminate() {
			if (this.$refs.input) this.$refs.input.indeterminate = this.d_indeterminate;
		}
	},
	computed: {
		groupName: function groupName() {
			return this.$pcCheckboxGroup ? this.$pcCheckboxGroup.groupName : this.$formName;
		},
		checked: function checked() {
			var value = this.$pcCheckboxGroup ? this.$pcCheckboxGroup.d_value : this.d_value;
			return this.d_indeterminate ? false : this.binary ? value === this.trueValue : q(this.value, value);
		},
		dataP: function dataP() {
			return f(_defineProperty({
				invalid: this.$invalid,
				checked: this.checked,
				disabled: this.disabled,
				filled: this.$variant === "filled"
			}, this.size, this.size));
		}
	},
	components: {
		CheckIcon: script,
		MinusIcon: script$1
	}
};
var _hoisted_1 = [
	"data-p-checked",
	"data-p-indeterminate",
	"data-p-disabled",
	"data-p"
];
var _hoisted_2 = [
	"id",
	"value",
	"name",
	"checked",
	"tabindex",
	"disabled",
	"readonly",
	"required",
	"aria-labelledby",
	"aria-label",
	"aria-invalid"
];
var _hoisted_3 = ["data-p"];
function render(_ctx, _cache, $props, $setup, $data, $options) {
	var _component_CheckIcon = resolveComponent("CheckIcon");
	var _component_MinusIcon = resolveComponent("MinusIcon");
	return openBlock(), createElementBlock("div", mergeProps({ "class": _ctx.cx("root") }, $options.getPTOptions("root"), {
		"data-p-checked": $options.checked,
		"data-p-indeterminate": $data.d_indeterminate || void 0,
		"data-p-disabled": _ctx.disabled,
		"data-p": $options.dataP
	}), [createBaseVNode("input", mergeProps({
		ref: "input",
		id: _ctx.inputId,
		type: "checkbox",
		"class": [_ctx.cx("input"), _ctx.inputClass],
		style: _ctx.inputStyle,
		value: _ctx.value,
		name: $options.groupName,
		checked: $options.checked,
		tabindex: _ctx.tabindex,
		disabled: _ctx.disabled,
		readonly: _ctx.readonly,
		required: _ctx.required,
		"aria-labelledby": _ctx.ariaLabelledby,
		"aria-label": _ctx.ariaLabel,
		"aria-invalid": _ctx.invalid || void 0,
		onFocus: _cache[0] || (_cache[0] = function() {
			return $options.onFocus && $options.onFocus.apply($options, arguments);
		}),
		onBlur: _cache[1] || (_cache[1] = function() {
			return $options.onBlur && $options.onBlur.apply($options, arguments);
		}),
		onChange: _cache[2] || (_cache[2] = function() {
			return $options.onChange && $options.onChange.apply($options, arguments);
		})
	}, $options.getPTOptions("input")), null, 16, _hoisted_2), createBaseVNode("div", mergeProps({ "class": _ctx.cx("box") }, $options.getPTOptions("box"), { "data-p": $options.dataP }), [renderSlot(_ctx.$slots, "icon", {
		checked: $options.checked,
		indeterminate: $data.d_indeterminate,
		"class": normalizeClass(_ctx.cx("icon")),
		dataP: $options.dataP
	}, function() {
		return [$options.checked ? (openBlock(), createBlock(_component_CheckIcon, mergeProps({
			key: 0,
			"class": _ctx.cx("icon")
		}, $options.getPTOptions("icon"), { "data-p": $options.dataP }), null, 16, ["class", "data-p"])) : $data.d_indeterminate ? (openBlock(), createBlock(_component_MinusIcon, mergeProps({
			key: 1,
			"class": _ctx.cx("icon")
		}, $options.getPTOptions("icon"), { "data-p": $options.dataP }), null, 16, ["class", "data-p"])) : createCommentVNode("", true)];
	})], 16, _hoisted_3)], 16, _hoisted_1);
}
script$3.render = render;

//#endregion
export { script$3 as script };
//# sourceMappingURL=checkbox-DyGQ2Npv.js.map