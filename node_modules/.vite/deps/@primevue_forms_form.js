import { C, H, Q, l, m, s$1 as s } from "./dist-Cf1N86TT.js";
import "./eventbus-B_YnctEL.js";
import { computed, createElementBlock, getCurrentInstance, mergeProps, nextTick, onMounted, openBlock, reactive, ref, renderSlot, toValue, watch, withModifiers } from "./vue.runtime.esm-bundler-BHzSINof.js";
import { BaseStyle } from "./style-DMEDYKr8.js";
import { script as script$1 } from "./basecomponent-D1PEsf1l.js";

//#region node_modules/@primevue/forms/useform/index.mjs
function _typeof$1(o) {
	"@babel/helpers - typeof";
	return _typeof$1 = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o$1) {
		return typeof o$1;
	} : function(o$1) {
		return o$1 && "function" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? "symbol" : typeof o$1;
	}, _typeof$1(o);
}
function ownKeys$1(e, r) {
	var t = Object.keys(e);
	if (Object.getOwnPropertySymbols) {
		var o = Object.getOwnPropertySymbols(e);
		r && (o = o.filter(function(r$1) {
			return Object.getOwnPropertyDescriptor(e, r$1).enumerable;
		})), t.push.apply(t, o);
	}
	return t;
}
function _objectSpread$1(e) {
	for (var r = 1; r < arguments.length; r++) {
		var t = null != arguments[r] ? arguments[r] : {};
		r % 2 ? ownKeys$1(Object(t), true).forEach(function(r$1) {
			_defineProperty$1(e, r$1, t[r$1]);
		}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys$1(Object(t)).forEach(function(r$1) {
			Object.defineProperty(e, r$1, Object.getOwnPropertyDescriptor(t, r$1));
		});
	}
	return e;
}
function _defineProperty$1(e, r, t) {
	return (r = _toPropertyKey$1(r)) in e ? Object.defineProperty(e, r, {
		value: t,
		enumerable: true,
		configurable: true,
		writable: true
	}) : e[r] = t, e;
}
function _toPropertyKey$1(t) {
	var i = _toPrimitive$1(t, "string");
	return "symbol" == _typeof$1(i) ? i : i + "";
}
function _toPrimitive$1(t, r) {
	if ("object" != _typeof$1(t) || !t) return t;
	var e = t[Symbol.toPrimitive];
	if (void 0 !== e) {
		var i = e.call(t, r);
		if ("object" != _typeof$1(i)) return i;
		throw new TypeError("@@toPrimitive must return a primitive value.");
	}
	return ("string" === r ? String : Number)(t);
}
function _regenerator() {
	/*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/babel/babel/blob/main/packages/babel-helpers/LICENSE */ var e, t, r = "function" == typeof Symbol ? Symbol : {}, n = r.iterator || "@@iterator", o = r.toStringTag || "@@toStringTag";
	function i(r$1, n$1, o$1, i$1) {
		var c$1 = n$1 && n$1.prototype instanceof Generator ? n$1 : Generator, u$1 = Object.create(c$1.prototype);
		return _regeneratorDefine2(u$1, "_invoke", function(r$2, n$2, o$2) {
			var i$2, c$2, u$2, f$1 = 0, p = o$2 || [], y = false, G = {
				p: 0,
				n: 0,
				v: e,
				a: d,
				f: d.bind(e, 4),
				d: function d$1(t$1, r$3) {
					return i$2 = t$1, c$2 = 0, u$2 = e, G.n = r$3, a;
				}
			};
			function d(r$3, n$3) {
				for (c$2 = r$3, u$2 = n$3, t = 0; !y && f$1 && !o$3 && t < p.length; t++) {
					var o$3, i$3 = p[t], d$1 = G.p, l$1 = i$3[2];
					r$3 > 3 ? (o$3 = l$1 === n$3) && (u$2 = i$3[(c$2 = i$3[4]) ? 5 : (c$2 = 3, 3)], i$3[4] = i$3[5] = e) : i$3[0] <= d$1 && ((o$3 = r$3 < 2 && d$1 < i$3[1]) ? (c$2 = 0, G.v = n$3, G.n = i$3[1]) : d$1 < l$1 && (o$3 = r$3 < 3 || i$3[0] > n$3 || n$3 > l$1) && (i$3[4] = r$3, i$3[5] = n$3, G.n = l$1, c$2 = 0));
				}
				if (o$3 || r$3 > 1) return a;
				throw y = true, n$3;
			}
			return function(o$3, p$1, l$1) {
				if (f$1 > 1) throw TypeError("Generator is already running");
				for (y && 1 === p$1 && d(p$1, l$1), c$2 = p$1, u$2 = l$1; (t = c$2 < 2 ? e : u$2) || !y;) {
					i$2 || (c$2 ? c$2 < 3 ? (c$2 > 1 && (G.n = -1), d(c$2, u$2)) : G.n = u$2 : G.v = u$2);
					try {
						if (f$1 = 2, i$2) {
							if (c$2 || (o$3 = "next"), t = i$2[o$3]) {
								if (!(t = t.call(i$2, u$2))) throw TypeError("iterator result is not an object");
								if (!t.done) return t;
								u$2 = t.value, c$2 < 2 && (c$2 = 0);
							} else 1 === c$2 && (t = i$2["return"]) && t.call(i$2), c$2 < 2 && (u$2 = TypeError("The iterator does not provide a '" + o$3 + "' method"), c$2 = 1);
							i$2 = e;
						} else if ((t = (y = G.n < 0) ? u$2 : r$2.call(n$2, G)) !== a) break;
					} catch (t$1) {
						i$2 = e, c$2 = 1, u$2 = t$1;
					} finally {
						f$1 = 1;
					}
				}
				return {
					value: t,
					done: y
				};
			};
		}(r$1, o$1, i$1), true), u$1;
	}
	var a = {};
	function Generator() {}
	function GeneratorFunction() {}
	function GeneratorFunctionPrototype() {}
	t = Object.getPrototypeOf;
	var c = [][n] ? t(t([][n]())) : (_regeneratorDefine2(t = {}, n, function() {
		return this;
	}), t), u = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(c);
	function f(e$1) {
		return Object.setPrototypeOf ? Object.setPrototypeOf(e$1, GeneratorFunctionPrototype) : (e$1.__proto__ = GeneratorFunctionPrototype, _regeneratorDefine2(e$1, o, "GeneratorFunction")), e$1.prototype = Object.create(u), e$1;
	}
	return GeneratorFunction.prototype = GeneratorFunctionPrototype, _regeneratorDefine2(u, "constructor", GeneratorFunctionPrototype), _regeneratorDefine2(GeneratorFunctionPrototype, "constructor", GeneratorFunction), GeneratorFunction.displayName = "GeneratorFunction", _regeneratorDefine2(GeneratorFunctionPrototype, o, "GeneratorFunction"), _regeneratorDefine2(u), _regeneratorDefine2(u, o, "Generator"), _regeneratorDefine2(u, n, function() {
		return this;
	}), _regeneratorDefine2(u, "toString", function() {
		return "[object Generator]";
	}), (_regenerator = function _regenerator$1() {
		return {
			w: i,
			m: f
		};
	})();
}
function _regeneratorDefine2(e, r, n, t) {
	var i = Object.defineProperty;
	try {
		i({}, "", {});
	} catch (e$1) {
		i = 0;
	}
	_regeneratorDefine2 = function _regeneratorDefine(e$1, r$1, n$1, t$1) {
		function o(r$2, n$2) {
			_regeneratorDefine2(e$1, r$2, function(e$2) {
				return this._invoke(r$2, n$2, e$2);
			});
		}
		r$1 ? i ? i(e$1, r$1, {
			value: n$1,
			enumerable: !t$1,
			configurable: !t$1,
			writable: !t$1
		}) : e$1[r$1] = n$1 : (o("next", 0), o("throw", 1), o("return", 2));
	}, _regeneratorDefine2(e, r, n, t);
}
function asyncGeneratorStep(n, t, e, r, o, a, c) {
	try {
		var i = n[a](c), u = i.value;
	} catch (n$1) {
		e(n$1);
		return;
	}
	i.done ? t(u) : Promise.resolve(u).then(r, o);
}
function _asyncToGenerator(n) {
	return function() {
		var t = this, e = arguments;
		return new Promise(function(r, o) {
			var a = n.apply(t, e);
			function _next(n$1) {
				asyncGeneratorStep(a, r, o, _next, _throw, "next", n$1);
			}
			function _throw(n$1) {
				asyncGeneratorStep(a, r, o, _next, _throw, "throw", n$1);
			}
			_next(void 0);
		});
	};
}
function _slicedToArray$1(r, e) {
	return _arrayWithHoles$1(r) || _iterableToArrayLimit$1(r, e) || _unsupportedIterableToArray$1(r, e) || _nonIterableRest$1();
}
function _nonIterableRest$1() {
	throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray$1(r, a) {
	if (r) {
		if ("string" == typeof r) return _arrayLikeToArray$1(r, a);
		var t = {}.toString.call(r).slice(8, -1);
		return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray$1(r, a) : void 0;
	}
}
function _arrayLikeToArray$1(r, a) {
	(null == a || a > r.length) && (a = r.length);
	for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
	return n;
}
function _iterableToArrayLimit$1(r, l$1) {
	var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
	if (null != t) {
		var e, n, i, u, a = [], f = true, o = false;
		try {
			if (i = (t = t.call(r)).next, 0 === l$1);
			else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l$1); f = !0);
		} catch (r$1) {
			o = true, n = r$1;
		} finally {
			try {
				if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
			} finally {
				if (o) throw n;
			}
		}
		return a;
	}
}
function _arrayWithHoles$1(r) {
	if (Array.isArray(r)) return r;
}
function tryOnMounted(fn) {
	var sync = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : true;
	if (getCurrentInstance()) onMounted(fn);
	else if (sync) fn();
	else nextTick(fn);
}
function watchPausable(source, callback, options) {
	var isActive = ref(true);
	return {
		stop: watch(source, function(newValue, oldValue) {
			if (!isActive.value) return;
			callback(newValue, oldValue);
		}, options),
		pause: function pause() {
			isActive.value = false;
		},
		resume: function resume() {
			isActive.value = true;
		}
	};
}
function groupKeys(obj) {
	return Object.entries(obj).reduce(function(result, _ref) {
		var _ref2 = _slicedToArray$1(_ref, 2), key = _ref2[0], value = _ref2[1];
		key.split(/[\.\[\]]+/).filter(Boolean).reduce(function(acc, curr, idx, arr) {
			var _acc$curr;
			return (_acc$curr = acc[curr]) !== null && _acc$curr !== void 0 ? _acc$curr : acc[curr] = isNaN(arr[idx + 1]) ? idx === arr.length - 1 ? value : {} : [];
		}, result);
		return result;
	}, {});
}
function getValueByPath(obj, path) {
	if (!obj || !path) return null;
	try {
		var value = obj[path];
		if (s(value)) return value;
	} catch (_unused) {}
	return path.split(/[\.\[\]]+/).filter(Boolean).reduce(function(acc, key) {
		return acc && acc[key] !== void 0 ? acc[key] : void 0;
	}, obj);
}
var useForm = function useForm$1() {
	var options = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
	var _states = reactive({});
	var fields = reactive({});
	var valid = computed(function() {
		return Object.values(_states).every(function(field) {
			return !field.invalid;
		});
	});
	var states = computed(function() {
		return groupKeys(_states);
	});
	var getInitialState = function getInitialState$1(field, initialValue) {
		return {
			value: initialValue !== null && initialValue !== void 0 ? initialValue : getValueByPath(options.initialValues, field),
			touched: false,
			dirty: false,
			pristine: true,
			valid: true,
			invalid: false,
			error: null,
			errors: []
		};
	};
	var isFieldValidate = function isFieldValidate$1(field, validateOn$1) {
		var value = m(validateOn$1, field);
		return value === true || C(value) && value.includes(field);
	};
	var validateOn = /* @__PURE__ */ function() {
		var _ref3 = _asyncToGenerator(/* @__PURE__ */ _regenerator().m(function _callee(option, defaultValue) {
			var _options$option;
			var results, fieldArr, _t, _t2;
			return _regenerator().w(function(_context) {
				while (1) switch (_context.n) {
					case 0:
						results = {};
						if (!C(options[option])) {
							_context.n = 2;
							break;
						}
						_context.n = 1;
						return validate(options[option]);
					case 1:
						results = _context.v;
						_context.n = 4;
						break;
					case 2:
						_t = (_options$option = options[option]) !== null && _options$option !== void 0 ? _options$option : defaultValue;
						if (!_t) {
							_context.n = 4;
							break;
						}
						_context.n = 3;
						return validate();
					case 3: results = _context.v;
					case 4:
						fieldArr = Object.keys(fields).filter(function(field) {
							var _fields$field;
							return (_fields$field = fields[field]) === null || _fields$field === void 0 || (_fields$field = _fields$field.options) === null || _fields$field === void 0 ? void 0 : _fields$field[option];
						}) || [];
						_t2 = s(fieldArr);
						if (!_t2) {
							_context.n = 6;
							break;
						}
						_context.n = 5;
						return validate(fieldArr);
					case 5: results = _context.v;
					case 6: return _context.a(2, results);
				}
			}, _callee);
		}));
		return function validateOn$1(_x, _x2) {
			return _ref3.apply(this, arguments);
		};
	}();
	var validateFieldOn = function validateFieldOn$1(field, fieldOptions, option, defaultValue) {
		var _fieldOptions$option, _options$option2;
		((_fieldOptions$option = fieldOptions === null || fieldOptions === void 0 ? void 0 : fieldOptions[option]) !== null && _fieldOptions$option !== void 0 ? _fieldOptions$option : isFieldValidate(field, (_options$option2 = options[option]) !== null && _options$option2 !== void 0 ? _options$option2 : defaultValue)) && validate(field);
	};
	var defineField = function defineField$1(field, fieldOptions) {
		var _fields$field2, _resolve;
		if (!field) return [];
		(_fields$field2 = fields[field]) === null || _fields$field2 === void 0 || _fields$field2._watcher.stop();
		_states[field] || (_states[field] = getInitialState(field, fieldOptions === null || fieldOptions === void 0 ? void 0 : fieldOptions.initialValue));
		var props = mergeProps((_resolve = m(fieldOptions, _states[field])) === null || _resolve === void 0 ? void 0 : _resolve.props, m(fieldOptions === null || fieldOptions === void 0 ? void 0 : fieldOptions.props, _states[field]), {
			name: field,
			onBlur: function onBlur() {
				_states[field].touched = true;
				validateFieldOn(field, fieldOptions, "validateOnBlur");
			},
			onInput: function onInput(event) {
				_states[field].value = event && Object.hasOwn(event, "value") ? event.value : event.target.value;
			},
			onChange: function onChange(event) {
				_states[field].value = event && Object.hasOwn(event, "value") ? event.value : event.target.type === "checkbox" || event.target.type === "radio" ? event.target.checked : event.target.value;
			},
			onInvalid: function onInvalid(errors) {
				var _errors$;
				_states[field].invalid = true;
				_states[field].errors = errors;
				_states[field].error = (_errors$ = errors === null || errors === void 0 ? void 0 : errors[0]) !== null && _errors$ !== void 0 ? _errors$ : null;
			}
		});
		var _watcher = watchPausable(function() {
			return _states[field].value;
		}, function(newValue, oldValue) {
			if (_states[field].pristine) _states[field].pristine = false;
			if (newValue !== oldValue) _states[field].dirty = true;
			validateFieldOn(field, fieldOptions, "validateOnValueUpdate", true);
		});
		fields[field] = {
			props,
			states: _states[field],
			options: fieldOptions,
			_watcher
		};
		return [_states[field], props];
	};
	var handleSubmit = function handleSubmit$1(callback) {
		return /* @__PURE__ */ function() {
			var _ref4 = _asyncToGenerator(/* @__PURE__ */ _regenerator().m(function _callee2(event) {
				var results;
				return _regenerator().w(function(_context2) {
					while (1) switch (_context2.n) {
						case 0:
							_context2.n = 1;
							return validateOn("validateOnSubmit", true);
						case 1:
							results = _context2.v;
							return _context2.a(2, callback(_objectSpread$1({
								originalEvent: event,
								valid: toValue(valid),
								states: toValue(states),
								reset
							}, results)));
					}
				}, _callee2);
			}));
			return function(_x3) {
				return _ref4.apply(this, arguments);
			};
		}();
	};
	var handleReset = function handleReset$1(callback) {
		return /* @__PURE__ */ function() {
			var _ref5 = _asyncToGenerator(/* @__PURE__ */ _regenerator().m(function _callee3(event) {
				return _regenerator().w(function(_context3) {
					while (1) switch (_context3.n) {
						case 0:
							reset();
							return _context3.a(2, callback({ originalEvent: event }));
					}
				}, _callee3);
			}));
			return function(_x4) {
				return _ref5.apply(this, arguments);
			};
		}();
	};
	var validate = /* @__PURE__ */ function() {
		var _ref6 = _asyncToGenerator(/* @__PURE__ */ _regenerator().m(function _callee4(field) {
			var _yield$options$resolv, _options$resolver, _result, _result$errors;
			var resolverOptions, _ref9, names, values, result, flattenFields, _i, _Object$entries, _Object$entries$_i, fieldName, fieldInst, _fieldInst$options, _getValueByPath, _errors$2, fieldResolver, _yield$fieldResolver, fieldValue, fieldResult, errors, _t3, _t4, _t5, _t6, _t7, _t8;
			return _regenerator().w(function(_context4) {
				while (1) switch (_context4.n) {
					case 0:
						resolverOptions = Object.entries(_states).reduce(function(acc, _ref7) {
							var _ref8 = _slicedToArray$1(_ref7, 2), key = _ref8[0], val = _ref8[1];
							acc.names.push(key);
							acc.values[key] = val.value;
							return acc;
						}, {
							names: [],
							values: {}
						});
						_ref9 = [resolverOptions.names, groupKeys(resolverOptions.values)], names = _ref9[0], values = _ref9[1];
						_context4.n = 1;
						return (_options$resolver = options.resolver) === null || _options$resolver === void 0 ? void 0 : _options$resolver.call(options, {
							names,
							values
						});
					case 1:
						_t4 = _yield$options$resolv = _context4.v;
						_t3 = _t4 !== null;
						if (!_t3) {
							_context4.n = 2;
							break;
						}
						_t3 = _yield$options$resolv !== void 0;
					case 2:
						if (!_t3) {
							_context4.n = 3;
							break;
						}
						_t5 = _yield$options$resolv;
						_context4.n = 4;
						break;
					case 3: _t5 = { values };
					case 4:
						result = _t5;
						(_result$errors = (_result = result).errors) !== null && _result$errors !== void 0 || (_result.errors = {});
						flattenFields = [field].flat();
						_i = 0, _Object$entries = Object.entries(fields);
					case 5:
						if (!(_i < _Object$entries.length)) {
							_context4.n = 12;
							break;
						}
						_Object$entries$_i = _slicedToArray$1(_Object$entries[_i], 2), fieldName = _Object$entries$_i[0], fieldInst = _Object$entries$_i[1];
						if (!(flattenFields.includes(fieldName) || !field || l(result.errors))) {
							_context4.n = 11;
							break;
						}
						fieldResolver = (_fieldInst$options = fieldInst.options) === null || _fieldInst$options === void 0 ? void 0 : _fieldInst$options.resolver;
						if (!fieldResolver) {
							_context4.n = 10;
							break;
						}
						fieldValue = fieldInst.states.value;
						_context4.n = 6;
						return fieldResolver({
							values: fieldValue,
							value: fieldValue,
							name: fieldName
						});
					case 6:
						_t7 = _yield$fieldResolver = _context4.v;
						_t6 = _t7 !== null;
						if (!_t6) {
							_context4.n = 7;
							break;
						}
						_t6 = _yield$fieldResolver !== void 0;
					case 7:
						if (!_t6) {
							_context4.n = 8;
							break;
						}
						_t8 = _yield$fieldResolver;
						_context4.n = 9;
						break;
					case 8: _t8 = { values: fieldValue };
					case 9:
						fieldResult = _t8;
						C(fieldResult.errors) && (fieldResult.errors = _defineProperty$1({}, fieldName, fieldResult.errors));
						result = H(result, fieldResult);
					case 10:
						errors = (_getValueByPath = getValueByPath(result.errors, fieldName)) !== null && _getValueByPath !== void 0 ? _getValueByPath : [];
						_states[fieldName].invalid = errors.length > 0;
						_states[fieldName].valid = !_states[fieldName].invalid;
						_states[fieldName].errors = errors;
						_states[fieldName].error = (_errors$2 = errors === null || errors === void 0 ? void 0 : errors[0]) !== null && _errors$2 !== void 0 ? _errors$2 : null;
					case 11:
						_i++;
						_context4.n = 5;
						break;
					case 12: return _context4.a(2, _objectSpread$1(_objectSpread$1({}, result), {}, { errors: groupKeys(result.errors) }));
				}
			}, _callee4);
		}));
		return function validate$1(_x5) {
			return _ref6.apply(this, arguments);
		};
	}();
	var reset = function reset$1() {
		Object.keys(_states).forEach(/* @__PURE__ */ function() {
			var _ref0 = _asyncToGenerator(/* @__PURE__ */ _regenerator().m(function _callee5(field) {
				var _fields$field3;
				var watcher;
				return _regenerator().w(function(_context5) {
					while (1) switch (_context5.n) {
						case 0:
							watcher = fields[field]._watcher;
							watcher.pause();
							fields[field].states = _states[field] = getInitialState(field, (_fields$field3 = fields[field]) === null || _fields$field3 === void 0 || (_fields$field3 = _fields$field3.options) === null || _fields$field3 === void 0 ? void 0 : _fields$field3.initialValue);
							_context5.n = 1;
							return nextTick();
						case 1: watcher.resume();
						case 2: return _context5.a(2);
					}
				}, _callee5);
			}));
			return function(_x6) {
				return _ref0.apply(this, arguments);
			};
		}());
	};
	var setFieldValue = function setFieldValue$1(field, value) {
		if (_states[field] !== void 0) _states[field].value = value;
	};
	var getFieldState = function getFieldState$1(field) {
		var _fields$field4;
		return (_fields$field4 = fields[field]) === null || _fields$field4 === void 0 ? void 0 : _fields$field4.states;
	};
	var setValues = function setValues$1(values) {
		Object.keys(values).forEach(function(field) {
			return setFieldValue(field, values[field]);
		});
	};
	tryOnMounted(function validateOnMounted() {
		validateOn("validateOnMount");
	});
	return {
		defineField,
		setFieldValue,
		getFieldState,
		handleSubmit,
		handleReset,
		validate,
		setValues,
		reset,
		valid,
		states,
		fields
	};
};

//#endregion
//#region node_modules/@primevue/forms/form/style/index.mjs
var FormStyle = BaseStyle.extend({
	name: "form",
	classes: { root: "p-form p-component" }
});

//#endregion
//#region node_modules/@primevue/forms/form/index.mjs
var script$1$1 = {
	name: "BaseForm",
	"extends": script$1,
	style: FormStyle,
	props: {
		resolver: {
			type: Function,
			"default": null
		},
		initialValues: {
			type: Object,
			"default": null
		},
		validateOnValueUpdate: {
			type: [Boolean, Array],
			"default": true
		},
		validateOnBlur: {
			type: [Boolean, Array],
			"default": false
		},
		validateOnMount: {
			type: [Boolean, Array],
			"default": false
		},
		validateOnSubmit: {
			type: [Boolean, Array],
			"default": true
		}
	},
	provide: function provide() {
		return {
			$pcForm: this,
			$parentInstance: this
		};
	}
};
function _typeof(o) {
	"@babel/helpers - typeof";
	return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function(o$1) {
		return typeof o$1;
	} : function(o$1) {
		return o$1 && "function" == typeof Symbol && o$1.constructor === Symbol && o$1 !== Symbol.prototype ? "symbol" : typeof o$1;
	}, _typeof(o);
}
function ownKeys(e, r) {
	var t = Object.keys(e);
	if (Object.getOwnPropertySymbols) {
		var o = Object.getOwnPropertySymbols(e);
		r && (o = o.filter(function(r$1) {
			return Object.getOwnPropertyDescriptor(e, r$1).enumerable;
		})), t.push.apply(t, o);
	}
	return t;
}
function _objectSpread(e) {
	for (var r = 1; r < arguments.length; r++) {
		var t = null != arguments[r] ? arguments[r] : {};
		r % 2 ? ownKeys(Object(t), true).forEach(function(r$1) {
			_defineProperty(e, r$1, t[r$1]);
		}) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function(r$1) {
			Object.defineProperty(e, r$1, Object.getOwnPropertyDescriptor(t, r$1));
		});
	}
	return e;
}
function _defineProperty(e, r, t) {
	return (r = _toPropertyKey(r)) in e ? Object.defineProperty(e, r, {
		value: t,
		enumerable: true,
		configurable: true,
		writable: true
	}) : e[r] = t, e;
}
function _toPropertyKey(t) {
	var i = _toPrimitive(t, "string");
	return "symbol" == _typeof(i) ? i : i + "";
}
function _toPrimitive(t, r) {
	if ("object" != _typeof(t) || !t) return t;
	var e = t[Symbol.toPrimitive];
	if (void 0 !== e) {
		var i = e.call(t, r);
		if ("object" != _typeof(i)) return i;
		throw new TypeError("@@toPrimitive must return a primitive value.");
	}
	return ("string" === r ? String : Number)(t);
}
function _slicedToArray(r, e) {
	return _arrayWithHoles(r) || _iterableToArrayLimit(r, e) || _unsupportedIterableToArray(r, e) || _nonIterableRest();
}
function _nonIterableRest() {
	throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
}
function _unsupportedIterableToArray(r, a) {
	if (r) {
		if ("string" == typeof r) return _arrayLikeToArray(r, a);
		var t = {}.toString.call(r).slice(8, -1);
		return "Object" === t && r.constructor && (t = r.constructor.name), "Map" === t || "Set" === t ? Array.from(r) : "Arguments" === t || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(t) ? _arrayLikeToArray(r, a) : void 0;
	}
}
function _arrayLikeToArray(r, a) {
	(null == a || a > r.length) && (a = r.length);
	for (var e = 0, n = Array(a); e < a; e++) n[e] = r[e];
	return n;
}
function _iterableToArrayLimit(r, l$1) {
	var t = null == r ? null : "undefined" != typeof Symbol && r[Symbol.iterator] || r["@@iterator"];
	if (null != t) {
		var e, n, i, u, a = [], f = true, o = false;
		try {
			if (i = (t = t.call(r)).next, 0 === l$1);
			else for (; !(f = (e = i.call(t)).done) && (a.push(e.value), a.length !== l$1); f = !0);
		} catch (r$1) {
			o = true, n = r$1;
		} finally {
			try {
				if (!f && null != t["return"] && (u = t["return"](), Object(u) !== u)) return;
			} finally {
				if (o) throw n;
			}
		}
		return a;
	}
}
function _arrayWithHoles(r) {
	if (Array.isArray(r)) return r;
}
var script = {
	name: "Form",
	"extends": script$1$1,
	inheritAttrs: false,
	emits: ["submit", "reset"],
	setup: function setup(props, _ref) {
		var emit = _ref.emit;
		var formRef = ref(null);
		var $form = useForm(props);
		var submit = function submit$1() {
			var _formRef$value;
			(_formRef$value = formRef.value) === null || _formRef$value === void 0 || _formRef$value.requestSubmit();
		};
		var register = function register$1(field, options) {
			if (!(options !== null && options !== void 0 && options.novalidate)) {
				var _$form$defineField = $form.defineField(field, options);
				return _slicedToArray(_$form$defineField, 2)[1];
			}
			return {};
		};
		var onSubmit = $form.handleSubmit(function(e) {
			emit("submit", e);
		});
		var onReset = $form.handleReset(function(e) {
			emit("reset", e);
		});
		return _objectSpread({
			formRef,
			submit,
			register,
			onSubmit,
			onReset
		}, Q($form, ["handleSubmit", "handleReset"]));
	}
};
function render(_ctx, _cache, $props, $setup, $data, $options) {
	return openBlock(), createElementBlock("form", mergeProps({
		ref: "formRef",
		onSubmit: _cache[0] || (_cache[0] = withModifiers(function() {
			return $setup.onSubmit && $setup.onSubmit.apply($setup, arguments);
		}, ["prevent"])),
		onReset: _cache[1] || (_cache[1] = withModifiers(function() {
			return $setup.onReset && $setup.onReset.apply($setup, arguments);
		}, ["prevent"])),
		"class": _ctx.cx("root")
	}, _ctx.ptmi("root")), [renderSlot(_ctx.$slots, "default", mergeProps({
		register: $setup.register,
		valid: _ctx.valid,
		reset: _ctx.reset
	}, _ctx.states))], 16);
}
script.render = render;

//#endregion
export { script as default };
//# sourceMappingURL=@primevue_forms_form.js.map